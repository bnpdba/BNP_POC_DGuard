[defaults]
deprecation_warnings=false
# smart - gather by default, but don't regather if already gathered
# implicit - gather by default, turn off with gather_facts: False
# explicit - do not gather by default, must say gather_facts: True
gathering = smart

strategy=linear

# change the default callback, you can only have one 'stdout' type  enabled at a time.
# stdout_callback = skippy
# Use the YAML callback plugin.
# Use the stdout_callback when running ad-hoc commands.
#stdout_callback = yaml
#callback_whitelist = profile_tasks ==> Deprecated
#callback_enabled
stdout_callback = yaml
bin_ansible_callbacks = True

# additional paths to search for roles in, colon separated
#roles_path    = /etc/ansible/roles

inventory=/home/ansible/BNP_POC_DGuard/inventory/poc/hosts
remote_tmp= ~/.ansible/tmp
local_tmp= ~/.ansible/tmp

allow_world_readable_tmpfiles=true
error_on_undefined_vars=False
localhost_warning=False
#retry_files_enabled=False
#retry_files_save_path = ~/.ansible-retry

ansible_connection=ssh
ansible_user=root
ansible_sudo=true
ansible_become=true
ansible_ssh_common_args='-o StrictHostKeyChecking=no'
host_key_checking = False
host_key_check = False

# set plugin path directories here, separate with colons
action_plugins     = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/action
become_plugins     = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/become
cache_plugins      = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/cache
callback_plugins   = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/callback
connection_plugins = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/connection
lookup_plugins     = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/lookup
inventory_plugins  = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/inventory
vars_plugins       = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/vars
filter_plugins     = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/filter
test_plugins       = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/test
terminal_plugins   = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/terminal
strategy_plugins   = /usr/local/lib/python3.9/site-packages/ansible_collections/community/general/plugins/strategy




# logging is off by default unless this path is defined
# if so defined, consider logrotate
log_path = /var/log/ansible.log

# if set, always use this private key file for authentication, same as
# if passing --private-key to ansible or ansible-playbook
#private_key_file = /path/to/file
#private_key_file = ~/.ssh/id_rsa

# by default, ansible-playbook will display "Skipping [host]" if it determines a task
# should not be run on a host.  Set this to "False" if you don't want to see these "Skipping"
# messages. NOTE: the task header will still be shown regardless of whether or not the
# task is skipped.
#display_skipped_hosts = True
display_skipped_hosts = False
display_ok_hosts = True


# by default (as of 1.6), Ansible may display warnings based on the configuration of the
# system running ansible itself. This may include warnings about 3rd party packages or
# other conditions that should be resolved if possible.
# to disable these warnings, set the following value to False:
system_warnings = True

[paramiko_connection]

# uncomment this line to cause the paramiko connection plugin to not record new host
# keys encountered.  Increases performance on new host additions.  Setting works independently of the
# host key checking setting above.
# record_host_keys=True
record_host_keys=False

# paramiko will default to looking for SSH keys initially when trying to
# authenticate to remote devices.  This is a problem for some network devices
# that close the connection after a key failure.  Uncomment this line to
# disable the Paramiko look for keys function
# look_for_keys = False
look_for_keys = True

# When using persistent connections with Paramiko, the connection runs in a
# background process.  If the host doesn't already have a valid SSH key, by
# default Ansible will prompt to add the host key.  This will cause connections
# running in background processes to fail.  Uncomment this line to have
# Paramiko automatically add host keys.
host_key_auto_add = True

forks          = 5
poll_interval  = 15
ask_sudo_pass  = False
ask_pass       = False
transport     = smart
remote_port    = 22
command_warnings=False
localhost ansible_connection=local ansible_python_interpreter='/usr/bin/python3'

[ssh_connection]
# ssh arguments to use
ssh_args = -o StrictHostKeyChecking=no -o ForwardAgent=yes
scp_if_ssh = True
#scp_if_ssh = smart

[galaxy]
server_list = release_galaxy, test_galaxy

[galaxy_server.automation_hub]
url=https://cloud.redhat.com/api/automation-hub/
auth_url=https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
token=my_ah_token

[galaxy_server.my_org_hub]
url=https://automation.my_org/
username=my_user
password=my_pass

[galaxy_server.release_galaxy]
url=https://galaxy.ansible.com/
token=my_token

[galaxy_server.test_galaxy]
url=https://galaxy-dev.ansible.com/
token=my_test_token
